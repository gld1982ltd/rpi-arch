#!/bin/bash
#-------------------------------------------------------------------------------
#Post Install Script for Arch Linux on the Raspberry Pi
#Inspired by helmuthdu https://gist.github.com/Xifax/1517721
#-------------------------------------------------------------------------------
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------------------
# Run this script after your first boot with Arch Linux (as root) on a Raspberry Pi.

#functions
function get_reply(){
  read -p "$1 [y][n]: " OPTION
  echo ""
}

function install_status(){
  if [ $? -ne 0 ] ; then
    CURRENT_STATUS=-1
  else
    CURRENT_STATUS=1
  fi
}

function print_line(){
  echo "--------------------------------------------------------------------------------"
}

function print_title (){
  clear
  echo "#-------------------------------------------------------------------------------"
  echo -e "# $1"
  echo "#-------------------------------------------------------------------------------"
  echo ""
}

function finish_function(){
  print_line
  echo "Hit Enter to continue."
  read
  clear
}

function summary(){
  case $CURRENT_STATUS in
    0)
      print_line
      echo "$1 not successfull (Canceled)"
      ;;
    -1)
      print_line
      echo "$1 not successfull (Error)"
      ;;
    1)
      print_line
      echo "$1 successfull"
      ;;
    *)
      print_line
      echo "WRONG ARG GIVEN"
      ;;
  esac
}

#begin
  clear
  echo "Welcome to the ArchPi install script"
  print_line
  echo "Requirements:"
  echo "-> Fresh Arch Linux installation on Raspberry Pi"
  echo "-> Working internet connection"
  print_line
  echo "Script can be canceled at any time with CTRL+C"
  print_line
  echo "OPEN THIS SCRIPT AND READ ALL OPTIONS BEFORE YOU CONTINUE TO USE IT"
  echo "This script is still in BETA. Please report any bugs."
  finish_function

#system update
  print_title "UPDATING YOUR SYSTEM - Run this script again after rebooting."
  pacman -Syyu
  read -p "Reboot your system [y][n]: " OPTION
  if [ $OPTION = "y" ]; then
    reboot
    exit 0
  fi

#create a new user
  print_title "CREATE USER ACCOUNT"
  get_reply "Create a new user account?"
  case "$OPTION" in
    "y")
      read -p "New user name: " USERNAME
      useradd -m -g users -G audio,video,wheel -s /bin/bash $USERNAME
      passwd $USERNAME
      #set user as sudo
      pacman -S --noconfirm sudo
      ## Uncomment to allow members of group wheel to execute any command
      sed -i '/%wheel ALL=(ALL) ALL/s/^#//' /etc/sudoers
      ## Same thing without a password (not secure)
      #sed -i '/%wheel ALL=(ALL) NOPASSWD: ALL/s/^#//' /etc/sudoers
      install_status
      ;;
    *)
      CURRENT_STATUS=0
      ;;
  esac

#yaourt
  print_title "YAOURT - https://wiki.archlinux.org/index.php/Yaourt"
  get_reply "Install yaourt - AUR Backend (required for many Packages)?"
  case "$OPTION" in
    "y")
      pacman -S --noconfirm base-devel yaourt
      install_status
      ;;
    *)
      CURRENT_STATUS=0
      ;;
  esac
  summary "Yaourt installation"
  finish_function

#base system
  get_reply "Install BASH TOOLS - https://wiki.archlinux.org/index.php/Bash?"
  case "$OPTION" in
    "y")
      pacman -S --noconfirm curl bc rsync mlocate bash-completion
      install_status
      ;;
    *)
      CURRENT_STATUS=0
      ;;
  esac
  get_reply "Install (UN)COMPRESS TOOLS - https://wiki.archlinux.org/index.php/P7zip?"
  case "$OPTION" in
    "y")
      pacman -S --noconfirm tar gzip bzip2 unzip unrar p7zip
      install_status
      ;;
    *)
      CURRENT_STATUS=0
      ;;
  esac
  finish_function

#configure ssh
  get_reply "Would you like to secure SSH? WARNING: You will no longer be able to login as root over SSH after this."
  case "$OPTION" in
    "y")
      echo -e "sshd: ALL\n# End of file" > /etc/hosts.allow
      echo -e "ALL: ALL: DENY\n# End of file" > /etc/hosts.deny
      #ssh_conf
        sed -i '/ListenAddress/s/^#//' /etc/ssh/sshd_config
        sed -i '/SyslogFacility/s/^#//' /etc/ssh/sshd_config
        sed -i '/LogLevel/s/^#//' /etc/ssh/sshd_config
        sed -i '/LoginGraceTime/s/^#//' /etc/ssh/sshd_config
        sed -i '/PermitRootLogin/s/^#//' /etc/ssh/sshd_config
        sed -i '/PermitRootLogin/s/yes/no/' /etc/ssh/sshd_config
        sed -i '/StrictModes/s/^#//' /etc/ssh/sshd_config
        sed -i '/RSAAuthentication/s/^#//' /etc/ssh/sshd_config
        sed -i '/PubkeyAuthentication/s/^#//' /etc/ssh/sshd_config
        sed -i '/IgnoreRhosts/s/^#//' /etc/ssh/sshd_config
        sed -i '/PermitEmptyPasswords/s/^#//' /etc/ssh/sshd_config
        sed -i '/X11Forwarding/s/^#//' /etc/ssh/sshd_config
        sed -i '/X11Forwarding/s/no/yes/' /etc/ssh/sshd_config
        sed -i '/X11DisplayOffset/s/^#//' /etc/ssh/sshd_config
        sed -i '/X11UseLocalhost/s/^#//' /etc/ssh/sshd_config
        sed -i '/PrintLastLog/s/^#//' /etc/ssh/sshd_config
        sed -i '/TCPKeepAlive/s/^#//' /etc/ssh/sshd_config
        sed -i 's/ListenAddress ::/s/^/#/' /etc/ssh/sshd_config
      ;;
    *)
      CURRENT_STATUS=0
      ;;
    esac

#complete
print_title "INSTALL COMPLETED: Please reboot now."
